{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/shashvatgarg/Desktop/Shashvat_Garg/Projects_Startup/Book%20My%20Adda/frontend/src/lib/firebase.ts"],"sourcesContent":["// lib/firebase.ts\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCRC5t3eICgzrf4-GcViS88odg_DxJg5ec\",\n  authDomain: \"bookmyadda-42d36.firebaseapp.com\",\n  projectId: \"bookmyadda-42d36\",\n  storageBucket: \"bookmyadda-42d36.firebasestorage.app\",\n  messagingSenderId: \"842737615345\",\n  appId: \"1:842737615345:web:f58e5e9ad1d82fba124450\",\n  measurementId: \"G-2ZYPM6M328\"\n};\n\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nexport default app;"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;AAClB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,MAAM,MAAM,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;AAErD,MAAM,OAAO,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE;uCAEhB","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///Users/shashvatgarg/Desktop/Shashvat_Garg/Projects_Startup/Book%20My%20Adda/frontend/src/lib/auth.ts"],"sourcesContent":["// src/lib/auth.ts\nimport { auth, db } from \"@/lib/firebase\";\nimport {\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n  signInWithPopup,\n  updateProfile,\n  User,\n} from \"firebase/auth\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { NextAuthOptions } from \"next-auth\";\nimport GoogleProvider from \"next-auth/providers/google\";\n\nexport const loginWithEmail = async (email: string, password: string) => {\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signupWithEmail = async (email: string, password: string, displayName: string) => {\n  const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n  const user = userCredential.user;\n\n  await updateProfile(user, { displayName });\n\n  const userDocRef = doc(db, \"users\", user.uid);\n  await setDoc(userDocRef, {\n    uid: user.uid,\n    displayName,\n    email,\n    createdAt: new Date(),\n  });\n\n  return user;\n};\n\nexport const loginWithGoogle = async () => {\n  const provider = new GoogleAuthProvider();\n  const result = await signInWithPopup(auth, provider);\n  const user = result.user;\n\n  const userDocRef = doc(db, \"users\", user.uid);\n  const userDocSnap = await getDoc(userDocRef);\n\n  if (!userDocSnap.exists()) {\n    await setDoc(userDocRef, {\n      uid: user.uid,\n      displayName: user.displayName,\n      email: user.email,\n      photoURL: user.photoURL,\n      createdAt: new Date(),\n    });\n  }\n\n  return user;\n};\n\nexport const logout = async () => {\n  return await signOut(auth);\n};\n\nexport const observeAuthState = (callback: (user: User | null) => void) => {\n  return onAuthStateChanged(auth, callback);\n};\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_ID!,\n      clientSecret: process.env.GOOGLE_SECRET!\n    }),\n  ],\n  secret: process.env.NEXTAUTH_SECRET,\n};\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;;;;AAClB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAEA;;;;;AAEO,MAAM,iBAAiB,OAAO,OAAe;IAClD,OAAO,MAAM,CAAA,GAAA,+PAAA,CAAA,6BAA0B,AAAD,EAAE,wHAAA,CAAA,OAAI,EAAE,OAAO;AACvD;AAEO,MAAM,kBAAkB,OAAO,OAAe,UAAkB;IACrE,MAAM,iBAAiB,MAAM,CAAA,GAAA,mQAAA,CAAA,iCAA8B,AAAD,EAAE,wHAAA,CAAA,OAAI,EAAE,OAAO;IACzE,MAAM,OAAO,eAAe,IAAI;IAEhC,MAAM,CAAA,GAAA,kPAAA,CAAA,gBAAa,AAAD,EAAE,MAAM;QAAE;IAAY;IAExC,MAAM,aAAa,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,wHAAA,CAAA,KAAE,EAAE,SAAS,KAAK,GAAG;IAC5C,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,YAAY;QACvB,KAAK,KAAK,GAAG;QACb;QACA;QACA,WAAW,IAAI;IACjB;IAEA,OAAO;AACT;AAEO,MAAM,kBAAkB;IAC7B,MAAM,WAAW,IAAI,sPAAA,CAAA,qBAAkB;IACvC,MAAM,SAAS,MAAM,CAAA,GAAA,mPAAA,CAAA,kBAAe,AAAD,EAAE,wHAAA,CAAA,OAAI,EAAE;IAC3C,MAAM,OAAO,OAAO,IAAI;IAExB,MAAM,aAAa,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EAAE,wHAAA,CAAA,KAAE,EAAE,SAAS,KAAK,GAAG;IAC5C,MAAM,cAAc,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE;IAEjC,IAAI,CAAC,YAAY,MAAM,IAAI;QACzB,MAAM,CAAA,GAAA,mKAAA,CAAA,SAAM,AAAD,EAAE,YAAY;YACvB,KAAK,KAAK,GAAG;YACb,aAAa,KAAK,WAAW;YAC7B,OAAO,KAAK,KAAK;YACjB,UAAU,KAAK,QAAQ;YACvB,WAAW,IAAI;QACjB;IACF;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,OAAO,MAAM,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD,EAAE,wHAAA,CAAA,OAAI;AAC3B;AAEO,MAAM,mBAAmB,CAAC;IAC/B,OAAO,CAAA,GAAA,sPAAA,CAAA,qBAAkB,AAAD,EAAE,wHAAA,CAAA,OAAI,EAAE;AAClC;AAEO,MAAM,cAA+B;IAC1C,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///Users/shashvatgarg/Desktop/Shashvat_Garg/Projects_Startup/Book%20My%20Adda/frontend/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import { authOptions } from \"@/lib/auth\";\r\nimport NextAuth from \"next-auth\";\r\n\r\n\r\nconst handler = NextAuth(authOptions);\r\n\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAGA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE,oHAAA,CAAA,cAAW","debugId":null}}]
}